{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Geoweaver 2018 ESIP Lab Incubator Project Geoweaver is an in-browser software allowing users to easily compose and execute full-stack data processing workflows by taking advantage of online spatial data facilities, high-performance computation platforms, and open-source deep learning libraries. It provides an all-in-one capacity covering server management, code repository, workflow orchestration software, and history recorder. It can be run from both local and remote (distributed) machines. GeoWeaver is a community effort. Any contribution is welcome and greatly appreciated! Software Goals Only two fundamental objectives: Make it time affordable for scientists with less-coding experience (who are unaware of WfMS) to manage their data processing workflows. Preserve every model run history and share them along with the code files. Tutorial Create and Manipulate Hosts Create and Run Processes Create, Run, and Export Workflows Jupyter Recording Installation Click here for the steps Demo A live demo site is available. Citation If you found Geoweaver helpful in your research. please cite : Sun, Z. et al., \"Geoweaver: Advanced cyberinfrastructure for managing hybrid geoscientific AI workflows.\" ISPRS International Journal of Geo-Information 9, no. 2 (2020): 119. Dependencies This project is impossible without the support of several remarkable open-source libraries. d3.js - BSD 3-Clause graph-creator - MIT License bootstrap - MIT License CodeMirror - MIT License JQuery Terminal - MIT License Community Geoweaver owes its success to the hard work of its many community members who generously devoted their time and effort to the project. Please find the full contributor list below: developer list License MIT","title":"Home"},{"location":"#geoweaver","text":"2018 ESIP Lab Incubator Project Geoweaver is an in-browser software allowing users to easily compose and execute full-stack data processing workflows by taking advantage of online spatial data facilities, high-performance computation platforms, and open-source deep learning libraries. It provides an all-in-one capacity covering server management, code repository, workflow orchestration software, and history recorder. It can be run from both local and remote (distributed) machines. GeoWeaver is a community effort. Any contribution is welcome and greatly appreciated!","title":"Geoweaver"},{"location":"#software-goals","text":"Only two fundamental objectives: Make it time affordable for scientists with less-coding experience (who are unaware of WfMS) to manage their data processing workflows. Preserve every model run history and share them along with the code files.","title":"Software Goals"},{"location":"#tutorial","text":"Create and Manipulate Hosts Create and Run Processes Create, Run, and Export Workflows Jupyter Recording","title":"Tutorial"},{"location":"#installation","text":"Click here for the steps","title":"Installation"},{"location":"#demo","text":"A live demo site is available.","title":"Demo"},{"location":"#citation","text":"If you found Geoweaver helpful in your research. please cite : Sun, Z. et al., \"Geoweaver: Advanced cyberinfrastructure for managing hybrid geoscientific AI workflows.\" ISPRS International Journal of Geo-Information 9, no. 2 (2020): 119.","title":"Citation"},{"location":"#dependencies","text":"This project is impossible without the support of several remarkable open-source libraries. d3.js - BSD 3-Clause graph-creator - MIT License bootstrap - MIT License CodeMirror - MIT License JQuery Terminal - MIT License","title":"Dependencies"},{"location":"#community","text":"Geoweaver owes its success to the hard work of its many community members who generously devoted their time and effort to the project. Please find the full contributor list below: developer list","title":"Community"},{"location":"#license","text":"MIT","title":"License"},{"location":"authors/","text":"Geoweaver is a community effort and many community members have contributed their time and effort in it. Please see full contributor list below: developer list","title":"Authors"},{"location":"host/","text":"Host in Geoweaver What is Host? In Geoweaver, Host means computing machines ( Linux/Windows/Mac computers ). It is where the code gets executed, data gets processed, and history is generated. Mostly, Host is dedicated to the local machine where Geoweaver is installed. Once Geoweaver is started, it will add a default Host Localhost which means the current machine Geoweaver is sitting on. For most people, Localhost is all they need. They can run all their processes on Localhost . Geoweaver has an amazing feature that's a lifesaver for multiple-server users. It allows you to enroll these servers and run your code on them without the hassle of having to manage it all separately. AWS EC2 instances and HPC are perfect examples of servers you can easily integrate with Geoweaver, and you'll be able to benefit from its time-saving benefits. This tutorial will help how to enroll a new Host and make it ready for running processes in Geoweaver. Create a Host Click the New Host button at the Hosts on the left panel. Leave the Host Type as default, add Host Name , Host IP , Port , and User Name of your server in the shown dialog box. Example: Host Name: Test Server Host IP: 127.0.0.1 Port: 22 User Name: testuser Click on Add . A new host node Test Server (from the above example) will be shown under the Host > Linux/Win/Mac Computers tree node. Read Python Environment Select the New Host under Hosts > Linux/Win/Mac Computers on the left panel. Click the python icon button in the toolbar of the shown Host Details page. Input the Host User Password of your account on the remote server in the shown dialog pop-up. Note: if the selected server is localhost, password instructions are discussed here An Environment List section will appear below the Host Details section showing all the available PyEnv python environments on the connected server. File Browser Select the new host under Hosts > Linux/Win/Mac Computers on the left panel. Click the sitemap icon (the one with branches) button in the Host Details toolbar. Input the Host User Password of your account on the server in the shown dialog pop-up. Note: if the selected server is localhost, password instructions are discussed here Click Confirm. A File Browser Section will appear below, showing all the available directories and files. File Uploader Select the new host under Hosts > Linux/Win/Mac Computers on the left panel. Click the uploader icon button in the Host Details toolbar. Input the Host Password of your account on the server in the shown dialog pop-up. Note : if the selected server is localhost, password instructions are discussed here A file upload section will appear below the Host Details section with drag and drop or file browser capability. Click on the Open the File Browser button to choose files, and click Start to initiate the uploading. A progress bar with a status above will indicate the progress of the upload. The status with the message Upload Complete in green will show when the file is successfully uploaded, and the file is uploaded to the home directory of the logged in user. Edit a Host Click the edit icon (first icon) in the toolbar of Host Details page. Change the field values as you wish. Note: The Host Id is not editable. Click the edit icon button again. The changes should be updated. Supported Hosts Linux/Win/Mac Computers Geoweaver provides a Host category called Linux/Win/Mac Computers to manage all the local / remote machines. For local computers (where Geoweaver is running), Geoweaver can directly access, manage, and run commands/programs. It will automatically generate a password at its first boot for security reasons. Scientists have to input the correct passwords to execute their programs or do any action on the local computers via Geoweaver. The computer's authenticated users can change their Geoweaver password anytime (please refer to reset password ). For remote computers (where Geoweaver is not installed but can access via networks), Geoweaver can access, manage, and run commands/programs on them if the operating systems have SSH service enabled and Geoweaver users have valid accounts on those computers. Geoweaver provides a file browser and uploader for users to transfer files from/to remote servers. Tips : SSH, or Secure Shell, is a remote administration protocol that allows users to control remote servers over the Internet. It provides a mechanism for authenticating a remote user, transferring inputs from the client to the host, and relaying the output back to the client.","title":"Host in Geoweaver"},{"location":"host/#host-in-geoweaver","text":"","title":"Host in Geoweaver"},{"location":"host/#what-is-host","text":"In Geoweaver, Host means computing machines ( Linux/Windows/Mac computers ). It is where the code gets executed, data gets processed, and history is generated. Mostly, Host is dedicated to the local machine where Geoweaver is installed. Once Geoweaver is started, it will add a default Host Localhost which means the current machine Geoweaver is sitting on. For most people, Localhost is all they need. They can run all their processes on Localhost . Geoweaver has an amazing feature that's a lifesaver for multiple-server users. It allows you to enroll these servers and run your code on them without the hassle of having to manage it all separately. AWS EC2 instances and HPC are perfect examples of servers you can easily integrate with Geoweaver, and you'll be able to benefit from its time-saving benefits. This tutorial will help how to enroll a new Host and make it ready for running processes in Geoweaver.","title":"What is Host?"},{"location":"host/#create-a-host","text":"Click the New Host button at the Hosts on the left panel. Leave the Host Type as default, add Host Name , Host IP , Port , and User Name of your server in the shown dialog box. Example: Host Name: Test Server Host IP: 127.0.0.1 Port: 22 User Name: testuser Click on Add . A new host node Test Server (from the above example) will be shown under the Host > Linux/Win/Mac Computers tree node.","title":"Create a Host"},{"location":"host/#read-python-environment","text":"Select the New Host under Hosts > Linux/Win/Mac Computers on the left panel. Click the python icon button in the toolbar of the shown Host Details page. Input the Host User Password of your account on the remote server in the shown dialog pop-up. Note: if the selected server is localhost, password instructions are discussed here An Environment List section will appear below the Host Details section showing all the available PyEnv python environments on the connected server.","title":"Read Python Environment"},{"location":"host/#file-browser","text":"Select the new host under Hosts > Linux/Win/Mac Computers on the left panel. Click the sitemap icon (the one with branches) button in the Host Details toolbar. Input the Host User Password of your account on the server in the shown dialog pop-up. Note: if the selected server is localhost, password instructions are discussed here Click Confirm. A File Browser Section will appear below, showing all the available directories and files.","title":"File Browser"},{"location":"host/#file-uploader","text":"Select the new host under Hosts > Linux/Win/Mac Computers on the left panel. Click the uploader icon button in the Host Details toolbar. Input the Host Password of your account on the server in the shown dialog pop-up. Note : if the selected server is localhost, password instructions are discussed here A file upload section will appear below the Host Details section with drag and drop or file browser capability. Click on the Open the File Browser button to choose files, and click Start to initiate the uploading. A progress bar with a status above will indicate the progress of the upload. The status with the message Upload Complete in green will show when the file is successfully uploaded, and the file is uploaded to the home directory of the logged in user.","title":"File Uploader"},{"location":"host/#edit-a-host","text":"Click the edit icon (first icon) in the toolbar of Host Details page. Change the field values as you wish. Note: The Host Id is not editable. Click the edit icon button again. The changes should be updated.","title":"Edit a Host"},{"location":"host/#supported-hosts","text":"","title":"Supported Hosts"},{"location":"host/#linuxwinmac-computers","text":"Geoweaver provides a Host category called Linux/Win/Mac Computers to manage all the local / remote machines. For local computers (where Geoweaver is running), Geoweaver can directly access, manage, and run commands/programs. It will automatically generate a password at its first boot for security reasons. Scientists have to input the correct passwords to execute their programs or do any action on the local computers via Geoweaver. The computer's authenticated users can change their Geoweaver password anytime (please refer to reset password ). For remote computers (where Geoweaver is not installed but can access via networks), Geoweaver can access, manage, and run commands/programs on them if the operating systems have SSH service enabled and Geoweaver users have valid accounts on those computers. Geoweaver provides a file browser and uploader for users to transfer files from/to remote servers. Tips : SSH, or Secure Shell, is a remote administration protocol that allows users to control remote servers over the Internet. It provides a mechanism for authenticating a remote user, transferring inputs from the client to the host, and relaying the output back to the client.","title":"Linux/Win/Mac Computers"},{"location":"http-proxy/","text":"How to set up HTTP Proxy for Geoweaver When deploying Geoweaver to a public server, the default port 8070 is normally blocked. To access Geoweaver, you need to set up a proxy in the HTTP server. Here is a how-to guide for Apache server. Apache Proxy for Geoweaver This guide uses Apache 2.4.39. It should work for any newer version. For older version, there might be changes. Please report if running into issues. Open your default site HTTP configuration file /etc/apache2/sites-available/000-default.conf . Add the following lines into the code block of <VirtualHost *:80> : ProxyPreserveHost On ProxyPass /Geoweaver/jupyter-socket ws://localhost:8070/Geoweaver/jupyter-socket ProxypassReverse /Geoweaver/jupyter-socket ws://localhost:8070/Geoweaver/jupyter-socket ProxyPass /Geoweaver/workflow-socket ws://localhost:8070/Geoweaver/workflow-socket ProxypassReverse /Geoweaver/workflow-socket ws://localhost:8070/Geoweaver/workflow-socket ProxyPass /Geoweaver/command-socket ws://localhost:8070/Geoweaver/command-socket ProxypassReverse /Geoweaver/command-socket ws://localhost:8070/Geoweaver/command-socket ProxyPass /Geoweaver/terminal-socket ws://localhost:8070/Geoweaver/terminal-socket ProxypassReverse /Geoweaver/terminal-socket ws://localhost:8070/Geoweaver/terminal-socket ProxyPass \"/Geoweaver\" \"http://localhost:8070/Geoweaver\" ProxyPassReverse \"/Geoweaver\" \"http://localhost:8070/Geoweaver\" Restart Apache using: service apache restart . Geoweaver should now be accessible at http://<your_server_domain>/Geoweaver . Nginx Proxy for Geoweaver TBD","title":"How to set up HTTP Proxy for Geoweaver"},{"location":"http-proxy/#how-to-set-up-http-proxy-for-geoweaver","text":"When deploying Geoweaver to a public server, the default port 8070 is normally blocked. To access Geoweaver, you need to set up a proxy in the HTTP server. Here is a how-to guide for Apache server.","title":"How to set up HTTP Proxy for Geoweaver"},{"location":"http-proxy/#apache-proxy-for-geoweaver","text":"This guide uses Apache 2.4.39. It should work for any newer version. For older version, there might be changes. Please report if running into issues. Open your default site HTTP configuration file /etc/apache2/sites-available/000-default.conf . Add the following lines into the code block of <VirtualHost *:80> : ProxyPreserveHost On ProxyPass /Geoweaver/jupyter-socket ws://localhost:8070/Geoweaver/jupyter-socket ProxypassReverse /Geoweaver/jupyter-socket ws://localhost:8070/Geoweaver/jupyter-socket ProxyPass /Geoweaver/workflow-socket ws://localhost:8070/Geoweaver/workflow-socket ProxypassReverse /Geoweaver/workflow-socket ws://localhost:8070/Geoweaver/workflow-socket ProxyPass /Geoweaver/command-socket ws://localhost:8070/Geoweaver/command-socket ProxypassReverse /Geoweaver/command-socket ws://localhost:8070/Geoweaver/command-socket ProxyPass /Geoweaver/terminal-socket ws://localhost:8070/Geoweaver/terminal-socket ProxypassReverse /Geoweaver/terminal-socket ws://localhost:8070/Geoweaver/terminal-socket ProxyPass \"/Geoweaver\" \"http://localhost:8070/Geoweaver\" ProxyPassReverse \"/Geoweaver\" \"http://localhost:8070/Geoweaver\" Restart Apache using: service apache restart . Geoweaver should now be accessible at http://<your_server_domain>/Geoweaver .","title":"Apache Proxy for Geoweaver"},{"location":"http-proxy/#nginx-proxy-for-geoweaver","text":"TBD","title":"Nginx Proxy for Geoweaver"},{"location":"install/","text":"Installation Dependencies Java 1.8+ (OpenJDK 8 or higher) Docker 18.09.1+ (only for installation via docker) Quick Install (Applicable in Linux, Mac, and Windows) Step 1 : Download the latest version of geoweaver.jar and save it in any folder Step 2 : Navigate to the Jar file folder and Run the command: java -jar geoweaver.jar Step 3 : Open browser and enter: http://localhost:8070/Geoweaver/ .That's it! Build from source Use maven to build. In the command line, go to the root folder and execute mvn install . After a successful build, the Geoweaver jar package will be under the directory: Geoweaver/target/Geoweaver-<version>.jar . Install using Docker Step 1 : Install Docker Desktop if you haven't (please refer to Get Docker to download). Step 2 : Pull geoweaver image using command: docker pull jensensun/geoweaver Step 3 : Run geoweaver using command: docker run -t -i -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ -p 8070:8070 jensensun/geoweaver What is going on? : -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ is for mounting your current home directory into the docker containers. marsvegan is the user name within geoweaver containers. -p 8070:8070 maps the port so you can access Geoweaver from your browser. jensensun/geoweaver is the published docker image url in DockerHub. Tip : You can create an alias, so next time, you won't copy and paste such a long command: alias geoweaver=\"docker run -t -i -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ -p 8070:8070 jensensun/geoweaver\" Then start it by simply typing: geoweaver Step 4 : Open web browser and input http://localhost:8070/Geoweaver . Geoweaver should show up in a sec. That is it! Reset Password for Localhost Geoweaver will automatically create a password for localhost. It will only show once at the first run of Geoweaver. It is recommended to copy and save it in a safe place. If you forget or miss that password, please run the following command to reset it: java -jar geoweaver.jar resetpassword If you used Docker , use the following command: docker run -t -i -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ -p 8070:8070 jensensun/geoweaver resetpassword Set up HTTP Proxy Click here to set up","title":"Installation"},{"location":"install/#installation","text":"","title":"Installation"},{"location":"install/#dependencies","text":"Java 1.8+ (OpenJDK 8 or higher) Docker 18.09.1+ (only for installation via docker)","title":"Dependencies"},{"location":"install/#quick-install","text":"(Applicable in Linux, Mac, and Windows) Step 1 : Download the latest version of geoweaver.jar and save it in any folder Step 2 : Navigate to the Jar file folder and Run the command: java -jar geoweaver.jar Step 3 : Open browser and enter: http://localhost:8070/Geoweaver/ .That's it!","title":"Quick Install"},{"location":"install/#build-from-source","text":"Use maven to build. In the command line, go to the root folder and execute mvn install . After a successful build, the Geoweaver jar package will be under the directory: Geoweaver/target/Geoweaver-<version>.jar .","title":"Build from source"},{"location":"install/#install-using-docker","text":"Step 1 : Install Docker Desktop if you haven't (please refer to Get Docker to download). Step 2 : Pull geoweaver image using command: docker pull jensensun/geoweaver Step 3 : Run geoweaver using command: docker run -t -i -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ -p 8070:8070 jensensun/geoweaver What is going on? : -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ is for mounting your current home directory into the docker containers. marsvegan is the user name within geoweaver containers. -p 8070:8070 maps the port so you can access Geoweaver from your browser. jensensun/geoweaver is the published docker image url in DockerHub. Tip : You can create an alias, so next time, you won't copy and paste such a long command: alias geoweaver=\"docker run -t -i -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ -p 8070:8070 jensensun/geoweaver\" Then start it by simply typing: geoweaver Step 4 : Open web browser and input http://localhost:8070/Geoweaver . Geoweaver should show up in a sec. That is it!","title":"Install using Docker"},{"location":"install/#reset-password-for-localhost","text":"Geoweaver will automatically create a password for localhost. It will only show once at the first run of Geoweaver. It is recommended to copy and save it in a safe place. If you forget or miss that password, please run the following command to reset it: java -jar geoweaver.jar resetpassword If you used Docker , use the following command: docker run -t -i -v <YOUR_HOME_DIRECTORY>:/home/marsvegan/ -p 8070:8070 jensensun/geoweaver resetpassword","title":"Reset Password for Localhost"},{"location":"install/#set-up-http-proxy","text":"Click here to set up","title":"Set up HTTP Proxy"},{"location":"process/","text":"Processes in Geoweaver What is Process? Process means code scripts to process data. You can understand it as a source code like Python. However, Process in Geoweaver is more dedicated to the source code for data processing . Note : It is not designed for everything . You can run any code, like starting an HTTP server or starting a GUI software, but it would be inappropriate and might cause issues. We recommend that users restrict the Process code to something finishable (no hanging), algorithmic, and data-oriented . Create a new Python process Click the New Process button after Process on the left panel. Select Python from the Language dropdown list. Input example: helloworld in the name section. Type the code in the code area, example in python : print(\"hello world\") Click Add at the bottom. A new process node helloworld will be added to the Process > Python tree. Run Python Process Click on the newly added helloworld process. An information panel will be shown in the main area. Click the play button to run the process. In the pop-up window, select Localhost and click Execute . A dialog box will appear to specify the Python environment; click Confirm to the default . In the password dialog box, input your password for Localhost . Click confirm . Note : If you get an incorrect password error, password resetting instructions are discussed here If you see hello world printed in the logging window, you have successfully created and run your first process in Geoweaver. Congratulations! You did it! Supported Code Scripts Geoweaver supports four types of processes to be executed on the SSH hosts enlisted in the Host section: Shell script, Notebooks, Python code, and Builtin processes. 1) Shell Shell scripts can be directly created, saved, executed, and monitored in Geoweaver. Users can execute the shell scripts on remote servers or the local host server on which Geoweaver is hosted. 2) Python Python is one of the most popular AI programming languages, and most AI-related packages reside in it. Geoweaver supports Python coding and scripting on top of multiple servers while preserving and maintaining the code in one database. All the historical runs are recorded and served in Geoweaver to prevent future duplicated attempts and significantly improve the reproducibility and reusability of AI programs. 3) NoteBook Geoweaver supports running Jupyter notebooks using the nbconvert command. The notebook and its logout are recorded in the database. Running notebook in Geoweaver will be equivalent to running jupyter nbconvert --inplace --allow-errors --to notebook --execute <notebook_file_path> . New notebook snapshots generated by every run will be saved in the Geoweaver database . No more worries about forgetting the results of your previous experiment configuration! Everything is covered. 4) Build-In Process To help people with limited programming skills, we are developing a set of built-in processes which have fixed program code and expose only input parameters to users. These processes make Geoweaver a powerful AI graphical user interface for diverse user groups to learn and experiment with their AI workflows without coding. Most built-in processes in Geoweaver are developed based on the existing AI python ecosystem like Keras and Scikit-learn. This section is under intensive development, and the first stable version expects users to create a full-stack AI workflow without writing a single line of code.","title":"Processes in Geoweaver"},{"location":"process/#processes-in-geoweaver","text":"","title":"Processes in Geoweaver"},{"location":"process/#what-is-process","text":"Process means code scripts to process data. You can understand it as a source code like Python. However, Process in Geoweaver is more dedicated to the source code for data processing . Note : It is not designed for everything . You can run any code, like starting an HTTP server or starting a GUI software, but it would be inappropriate and might cause issues. We recommend that users restrict the Process code to something finishable (no hanging), algorithmic, and data-oriented .","title":"What is Process?"},{"location":"process/#create-a-new-python-process","text":"Click the New Process button after Process on the left panel. Select Python from the Language dropdown list. Input example: helloworld in the name section. Type the code in the code area, example in python : print(\"hello world\") Click Add at the bottom. A new process node helloworld will be added to the Process > Python tree.","title":"Create a new Python process"},{"location":"process/#run-python-process","text":"Click on the newly added helloworld process. An information panel will be shown in the main area. Click the play button to run the process. In the pop-up window, select Localhost and click Execute . A dialog box will appear to specify the Python environment; click Confirm to the default . In the password dialog box, input your password for Localhost . Click confirm . Note : If you get an incorrect password error, password resetting instructions are discussed here If you see hello world printed in the logging window, you have successfully created and run your first process in Geoweaver. Congratulations! You did it!","title":"Run Python Process"},{"location":"process/#supported-code-scripts","text":"Geoweaver supports four types of processes to be executed on the SSH hosts enlisted in the Host section: Shell script, Notebooks, Python code, and Builtin processes.","title":"Supported Code Scripts"},{"location":"process/#1-shell","text":"Shell scripts can be directly created, saved, executed, and monitored in Geoweaver. Users can execute the shell scripts on remote servers or the local host server on which Geoweaver is hosted.","title":"1) Shell"},{"location":"process/#2-python","text":"Python is one of the most popular AI programming languages, and most AI-related packages reside in it. Geoweaver supports Python coding and scripting on top of multiple servers while preserving and maintaining the code in one database. All the historical runs are recorded and served in Geoweaver to prevent future duplicated attempts and significantly improve the reproducibility and reusability of AI programs.","title":"2) Python"},{"location":"process/#3-notebook","text":"Geoweaver supports running Jupyter notebooks using the nbconvert command. The notebook and its logout are recorded in the database. Running notebook in Geoweaver will be equivalent to running jupyter nbconvert --inplace --allow-errors --to notebook --execute <notebook_file_path> . New notebook snapshots generated by every run will be saved in the Geoweaver database . No more worries about forgetting the results of your previous experiment configuration! Everything is covered.","title":"3) NoteBook"},{"location":"process/#4-build-in-process","text":"To help people with limited programming skills, we are developing a set of built-in processes which have fixed program code and expose only input parameters to users. These processes make Geoweaver a powerful AI graphical user interface for diverse user groups to learn and experiment with their AI workflows without coding. Most built-in processes in Geoweaver are developed based on the existing AI python ecosystem like Keras and Scikit-learn. This section is under intensive development, and the first stable version expects users to create a full-stack AI workflow without writing a single line of code.","title":"4) Build-In Process"},{"location":"workflow/","text":"Workflow in Geoweaver What is Workflow? In Geoweaver, Workflow denotes a pipeline linking multiple (>2) Processes. An isolated Process (not connected to any other Processes) is allowed in Geoweaver. WARNING: Loop is not allowed among the child Process nodes . The Workflow graph is directed and acyclic (please refer to this link to learn more about Directed Acyclic Graphs). Create and run a workflow Click twice on the plus icon button under any process (e.g., helloworld Python process created in the Process tutorial ). The main work area will switch to the \"Weaver\" tab, and two circles containing helloworld should appear in the workspace. Link the two circles by dragging from one circle and dropping on another circle while pressing SHIFT on the keyboard. Click the plus button in the toolbar floating in the 'Weaver' workspace. In the popup window, input HelloWorldWorkflow for the workflow name, and type Testing hello world in the Description field. Click Confirm . To run the workflow, click the play button in the toolbar floating on the 'Weaver' workspace. In the popup window, select one-host option. Choose localhost and set the environment to default . Click Run . In the password dialog box, enter the password for localhost. Note: If you get an incorrect password error, password resetting instructions are discussed here While the workflow is in execution mode, you can see: Blue - This means the process is waiting Yellow - This means the corresponding process is running Green - This means the process execution is finished Red - This means the process execution failed for some reason. Double-click on the circles to check the real-time output. If users need more details, click Details button in the popup Process information window. Export and Import a workflow To export a workflow into a zip file: Choose a workflow in the Workflow tree menu and click on it. Click the downward icon button in the floating toolbar when the workflow is present in the Weaver workspace. There will be four downloading options: workflow with process code or Workflow with Process Code and Only Workflow History or Workflow with Process Code and Only Successfully Done History or workflow with process code and history (Recommended) . The first option will only download the source code and workflow json. The second option will only download source code the only the workflow history, without process history. The third option will download the source code and only the completed execution history of the workflow without the details of failed executions. Finally, The last option will download not only the source code and workflow but also all the historical details of the previous execution of the workflow. The last option is recommended. Click Confirm . A ZIP file will be automatically downloaded to your machine. To import a shared workflow: Click the upward icon button in the floating toolbar of Weaver. In the shown window, click Open the File Browser and choose the Geoweaver ZIP file you received. Click Start . Once the uploading is finished and the workflow file is valid, it will as, The upload workflow is valid. Do you want to proceed to save it into the database? Click OK . The workflow will be automatically loaded into the Weaver workspace and ready for execution and reuse. If you check the process and workflow history, you will see that all the previous logs are also there. Congratulations! you have learned how to create, run, export, and share a workflow in Geoweaver!","title":"Workflow in Geoweaver"},{"location":"workflow/#workflow-in-geoweaver","text":"","title":"Workflow in Geoweaver"},{"location":"workflow/#what-is-workflow","text":"In Geoweaver, Workflow denotes a pipeline linking multiple (>2) Processes. An isolated Process (not connected to any other Processes) is allowed in Geoweaver. WARNING: Loop is not allowed among the child Process nodes . The Workflow graph is directed and acyclic (please refer to this link to learn more about Directed Acyclic Graphs).","title":"What is Workflow?"},{"location":"workflow/#create-and-run-a-workflow","text":"Click twice on the plus icon button under any process (e.g., helloworld Python process created in the Process tutorial ). The main work area will switch to the \"Weaver\" tab, and two circles containing helloworld should appear in the workspace. Link the two circles by dragging from one circle and dropping on another circle while pressing SHIFT on the keyboard. Click the plus button in the toolbar floating in the 'Weaver' workspace. In the popup window, input HelloWorldWorkflow for the workflow name, and type Testing hello world in the Description field. Click Confirm . To run the workflow, click the play button in the toolbar floating on the 'Weaver' workspace. In the popup window, select one-host option. Choose localhost and set the environment to default . Click Run . In the password dialog box, enter the password for localhost. Note: If you get an incorrect password error, password resetting instructions are discussed here While the workflow is in execution mode, you can see: Blue - This means the process is waiting Yellow - This means the corresponding process is running Green - This means the process execution is finished Red - This means the process execution failed for some reason. Double-click on the circles to check the real-time output. If users need more details, click Details button in the popup Process information window.","title":"Create and run a workflow"},{"location":"workflow/#export-and-import-a-workflow","text":"","title":"Export and Import a workflow"},{"location":"workflow/#to-export-a-workflow-into-a-zip-file","text":"Choose a workflow in the Workflow tree menu and click on it. Click the downward icon button in the floating toolbar when the workflow is present in the Weaver workspace. There will be four downloading options: workflow with process code or Workflow with Process Code and Only Workflow History or Workflow with Process Code and Only Successfully Done History or workflow with process code and history (Recommended) . The first option will only download the source code and workflow json. The second option will only download source code the only the workflow history, without process history. The third option will download the source code and only the completed execution history of the workflow without the details of failed executions. Finally, The last option will download not only the source code and workflow but also all the historical details of the previous execution of the workflow. The last option is recommended. Click Confirm . A ZIP file will be automatically downloaded to your machine.","title":"To export a workflow into a zip file:"},{"location":"workflow/#to-import-a-shared-workflow","text":"Click the upward icon button in the floating toolbar of Weaver. In the shown window, click Open the File Browser and choose the Geoweaver ZIP file you received. Click Start . Once the uploading is finished and the workflow file is valid, it will as, The upload workflow is valid. Do you want to proceed to save it into the database? Click OK . The workflow will be automatically loaded into the Weaver workspace and ready for execution and reuse. If you check the process and workflow history, you will see that all the previous logs are also there. Congratulations! you have learned how to create, run, export, and share a workflow in Geoweaver!","title":"To import a shared workflow:"}]}